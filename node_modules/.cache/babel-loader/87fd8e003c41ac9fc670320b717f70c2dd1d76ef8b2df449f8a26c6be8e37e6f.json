{"ast":null,"code":"var _jsxFileName = \"/home/shabd/webdev projects/CodeSwap/src/components/Editor.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport Codemirror from 'codemirror';\nimport 'codemirror/lib/codemirror.css';\nimport 'codemirror/theme/dracula.css';\nimport 'codemirror/theme/3024-day.css';\nimport 'codemirror/theme/3024-night.css';\nimport 'codemirror/theme/eclipse.css';\nimport 'codemirror/theme/material.css';\nimport 'codemirror/theme/rubyblue.css';\nimport 'codemirror/mode/javascript/javascript';\nimport 'codemirror/mode/python/python';\nimport 'codemirror/mode/xml/xml';\nimport 'codemirror/mode/clike/clike';\nimport 'codemirror/mode/css/css';\nimport 'codemirror/addon/edit/closetag';\nimport 'codemirror/addon/edit/closebrackets';\nimport ACTIONS from '../Actions';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Editor = ({\n  socketRef,\n  roomId,\n  onCodeChange\n}) => {\n  _s();\n  const editorRef = useRef(null);\n  const modeOptions = {\n    javascript: {\n      name: 'javascript',\n      json: true\n    },\n    python: {\n      name: 'python'\n    },\n    cplusplus: {\n      name: 'text/x-c++src'\n    },\n    java: {\n      name: 'text/x-java'\n    },\n    xml: {\n      name: 'xml'\n    }\n  };\n  const themeOptions = ['dracula', '3024-day', '3024-night', 'eclipse', 'material', 'rubyblue'];\n  useEffect(() => {\n    async function init() {\n      editorRef.current = Codemirror.fromTextArea(document.getElementById('realtimeEditor'), {\n        mode: modeOptions.javascript,\n        theme: 'dracula',\n        autoCloseTags: true,\n        autoCloseBrackets: true,\n        lineNumbers: true\n      });\n      editorRef.current.on('change', (instance, changes) => {\n        const {\n          origin\n        } = changes;\n        const code = instance.getValue();\n        onCodeChange(code);\n        if (origin !== 'setValue') {\n          socketRef.current.emit(ACTIONS.CODE_CHANGE, {\n            roomId,\n            code\n          });\n        }\n      });\n    }\n    init();\n  }, []);\n  useEffect(() => {\n    if (socketRef.current) {\n      socketRef.current.on(ACTIONS.CODE_CHANGE, ({\n        code\n      }) => {\n        if (code !== null) {\n          editorRef.current.setValue(code);\n        }\n      });\n    }\n    return () => {\n      socketRef.current.off(ACTIONS.CODE_CHANGE);\n    };\n  }, [socketRef.current]);\n  const handleModeChange = e => {\n    const mode = e.target.value;\n    editorRef.current.setOption('mode', modeOptions[mode]);\n  };\n  const handleThemeChange = e => {\n    const theme = e.target.value;\n    editorRef.current.setOption('theme', theme);\n  };\n  const handleRunCode = () => {\n    const code = editorRef.current.getValue();\n    switch (editorRef.current.getOption(\"mode\").name) {\n      case \"javascript\":\n        try {\n          eval(code);\n        } catch (e) {\n          console.error(e);\n        }\n        break;\n      case \"python\":\n        // Execute the Python code using a runtime environment\n\n        break;\n      case \"text/x-c++src\":\n        // Execute the C++ code using a runtime environment\n\n        break;\n      case \"text/x-java\":\n        // Execute the Java code using a runtime environment\n\n        break;\n      case \"xml\":\n        // Execute the XML code using a runtime environment\n\n        break;\n      default:\n        break;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"mode-select\",\n        children: \"Language:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"mode-select\",\n        onChange: handleModeChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"javascript\",\n          children: \"JavaScript\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"python\",\n          children: \"Python\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"cplusplus\",\n          children: \"C++\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"java\",\n          children: \"Java\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"xml\",\n          children: \"XML\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"theme-select\",\n        children: \"Theme:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"theme-select\",\n        onChange: handleThemeChange,\n        children: themeOptions.map(theme => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: theme,\n          children: theme\n        }, theme, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      id: \"realtimeEditor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Editor, \"ueqoO+5gVAT6IRBF08iN84bYr2g=\");\n_c = Editor;\nexport default Editor;\nvar _c;\n$RefreshReg$(_c, \"Editor\");","map":{"version":3,"names":["React","useEffect","useRef","Codemirror","ACTIONS","jsxDEV","_jsxDEV","Fragment","_Fragment","Editor","socketRef","roomId","onCodeChange","_s","editorRef","modeOptions","javascript","name","json","python","cplusplus","java","xml","themeOptions","init","current","fromTextArea","document","getElementById","mode","theme","autoCloseTags","autoCloseBrackets","lineNumbers","on","instance","changes","origin","code","getValue","emit","CODE_CHANGE","setValue","off","handleModeChange","e","target","value","setOption","handleThemeChange","handleRunCode","getOption","eval","console","error","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","onChange","map","_c","$RefreshReg$"],"sources":["/home/shabd/webdev projects/CodeSwap/src/components/Editor.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport Codemirror from 'codemirror';\nimport 'codemirror/lib/codemirror.css';\nimport 'codemirror/theme/dracula.css';\nimport 'codemirror/theme/3024-day.css';\nimport 'codemirror/theme/3024-night.css';\nimport 'codemirror/theme/eclipse.css';\nimport 'codemirror/theme/material.css';\nimport 'codemirror/theme/rubyblue.css';\nimport 'codemirror/mode/javascript/javascript';\nimport 'codemirror/mode/python/python';\nimport 'codemirror/mode/xml/xml';\nimport 'codemirror/mode/clike/clike';\nimport 'codemirror/mode/css/css';\nimport 'codemirror/addon/edit/closetag';\nimport 'codemirror/addon/edit/closebrackets';\nimport ACTIONS from '../Actions';\n\nconst Editor = ({ socketRef, roomId, onCodeChange }) => {\n  const editorRef = useRef(null);\n  const modeOptions = {\n    javascript: { name: 'javascript', json: true },\n    python: { name: 'python' },\n    cplusplus: { name: 'text/x-c++src' },\n    java: { name: 'text/x-java' },\n    xml: { name: 'xml' },\n  };\n  const themeOptions = [\n    'dracula',\n    '3024-day',\n    '3024-night',\n    'eclipse',\n    'material',\n    'rubyblue',\n  ];\n\n  useEffect(() => {\n    async function init() {\n      editorRef.current = Codemirror.fromTextArea(\n        document.getElementById('realtimeEditor'),\n        {\n          mode: modeOptions.javascript,\n          theme: 'dracula',\n          autoCloseTags: true,\n          autoCloseBrackets: true,\n          lineNumbers: true,\n        }\n      );\n\n      editorRef.current.on('change', (instance, changes) => {\n        const { origin } = changes;\n        const code = instance.getValue();\n        onCodeChange(code);\n        if (origin !== 'setValue') {\n          socketRef.current.emit(ACTIONS.CODE_CHANGE, {\n            roomId,\n            code,\n          });\n        }\n      });\n    }\n    init();\n  }, []);\n\n  useEffect(() => {\n    if (socketRef.current) {\n      socketRef.current.on(ACTIONS.CODE_CHANGE, ({ code }) => {\n        if (code !== null) {\n          editorRef.current.setValue(code);\n        }\n      });\n    }\n\n    return () => {\n      socketRef.current.off(ACTIONS.CODE_CHANGE);\n    };\n  }, [socketRef.current]);\n\n  const handleModeChange = (e) => {\n    const mode = e.target.value;\n    editorRef.current.setOption('mode', modeOptions[mode]);\n  };\n\n  const handleThemeChange = (e) => {\n    const theme = e.target.value;\n    editorRef.current.setOption('theme', theme);\n  };\n\n  const handleRunCode = () => {\n    const code = editorRef.current.getValue();\n    switch (editorRef.current.getOption(\"mode\").name) {\n      case \"javascript\":\n        try {\n          eval(code);\n        } catch (e) {\n          console.error(e);\n        }\n        break;\n      case \"python\":\n        // Execute the Python code using a runtime environment\n       \n        break;\n      case \"text/x-c++src\":\n        // Execute the C++ code using a runtime environment\n        \n        break;\n      case \"text/x-java\":\n        // Execute the Java code using a runtime environment\n        \n        break;\n      case \"xml\":\n        // Execute the XML code using a runtime environment\n        \n        break;\n      default:\n        break;\n    }\n  };\n  return (\n    <>\n      <div>\n        <label htmlFor=\"mode-select\">Language:</label>\n        <select id=\"mode-select\" onChange={handleModeChange}>\n          <option value=\"javascript\">JavaScript</option>\n          <option value=\"python\">Python</option>\n          <option value=\"cplusplus\">C++</option>\n          <option value=\"java\">Java</option>\n          <option value=\"xml\">XML</option>\n        </select>\n      </div>\n      <div>\n        <label htmlFor=\"theme-select\">Theme:</label>\n        <select id=\"theme-select\" onChange={handleThemeChange}>\n          {themeOptions.map((theme) => (\n            <option key={theme} value={theme}>\n              {theme}\n            </option>\n          ))}\n        </select>\n      </div>\n      <textarea id=\"realtimeEditor\"></textarea>\n      {/* <button onClick={handleRunCode}>Run</button> */}\n    </>\n  );\n};\n\nexport default Editor;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}